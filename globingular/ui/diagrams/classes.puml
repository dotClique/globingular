@startuml classes_ui

skinparam PageMargin 50

package globingular.ui {
	class App [[java:App]] {
		+void start(Stage primaryStage)
		+{static}void main(String[] args)
	}
	class Application [[java:com.sun.glass.ui.Application]] {
	}
	Application <|-- App

	class AppController [[java:globingular.ui.AppController]] {
		-PersistenceHandler persistence
		-CountryCollector countryCollector
		-World world
		-Document document
		-Country inputCountry
		+{static}PseudoClass INVALID
		+{static}PseudoClass BLANK
		-Parent root
		-ListView<Country> countriesList
		-TextField countryInput
		-Button countryAdd
		-Button countryDel
		-ImageView imgView
		+AppController()
		+void initialize(URL location, ResourceBundle resources)
		+CountryCollector getCountryCollector()
		~void onCountryAdd()
		-void onInputChange()
		~void onCountryDel()
		-void setColor(Country country, Colors color)
		-void setColorAll(Collection<Country> countries, Colors color)
		-void updateMap()
	}
	interface Initializable [[java:javafx.fxml.Initializable]] {
	}
	Initializable <|.. AppController

	class BufferedImageTranscoder [[java:globingular.ui.BufferedImageTranscoder]] {
		-BufferedImage img
		+BufferedImage createImage(int w, int h)
		+void writeImage(BufferedImage image, TranscoderOutput ignoredTO)
		+BufferedImage getBufferedImage()
		+void setImg(BufferedImage img)
	}
	class ImageTranscoder [[java:javax.imageio.ImageTranscoder]] {
	}
	ImageTranscoder <|-- BufferedImageTranscoder

	enum Colors [[java:globingular.ui.Colors]] {
		COUNTRY_NOT_VISITED
		COUNTRY_VISITED
		hex
		~Colors(String hex)
		+String getHex()
	}
}


' package globingular.core {
'     class Country {
'     }
'     class CountryCollector {
'     }
'     class World {
'     }
' }

' package globingular.persistence {
'     class PersistenceHandler {
'     }
' }

AppController --> "persistence: 1" PersistenceHandler
AppController --> "countryCollector: 1" CountryCollector
AppController --> "world: 1" World
AppController --> "inputCountry: 1" Country
AppController --> "countriesList: *" Country

@enduml
